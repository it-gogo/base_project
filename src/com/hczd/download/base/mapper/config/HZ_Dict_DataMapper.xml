<?xml version="1.0" encoding="UTF-8" ?> 
<!DOCTYPE mapper 
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
<mapper namespace="com.hczd.download.base.mapper.IHZ_Dict_DataMapper">
    <insert id="insert" parameterType="HZ_Dict_Data">
	    insert into HZ_Dict_Data(dict_type_id,data_id,name,checked,remarks,create_user_id,create_time,update_user_id,update_time)
	    values(#{dict_type_id},#{data_id},#{name},#{checked},#{remarks},#{create_user_id},#{create_time},#{update_user_id},#{update_time})
	</insert>
	<update id="update">
	    update HZ_Dict_Data 
		    set dict_type_id = #{dict_type_id},
		    data_id = #{data_id},
		    name = #{name},
		    checked = #{checked},
		    remarks = #{remarks},
		    update_user_id = #{update_user_id},
		    update_time = #{update_time}
		    where id = #{id}
	</update>
	<delete id="delete" parameterType="string">
	    delete from HZ_Dict_Data where id= #{id}
	</delete>
	
	<delete id="deleteByTypeId" parameterType="string">
	    delete from HZ_Dict_Data where dict_type_id= #{id}
	</delete>	
	<select id="getDataByExtension" parameterType="string" resultType="HZ_Dict_Data">
	    select A.* from hz_dict_data A
		left outer join hz_dict_type B on A.dict_type_id = B.id
		where B.extension = #{extension}
	</select>
	<select id="select" resultType="HZ_Dict_Data">
	    select * from HZ_Dict_Data
	</select>
	<select id="selectByParams" resultType="HZ_Dict_Data" parameterType="map">
	    select * from HZ_Dict_Data ${where} 
	</select>
	<select id="selectByPage" parameterType="HZ_PageData" resultType="HZ_Dict_Data">
	    select * from HZ_Dict_Data 
	    limit ${pageSize} offset ${(currentPage - 1) * pageSize}
	</select>
	<select id="selectPageByParams" parameterType="map" resultType="HZ_Dict_Data">
	    select * from HZ_Dict_Data ${where} 
	    limit ${pageData.pageSize} offset ${(pageData.currentPage - 1) * pageData.pageSize}
	</select>
	<select id="count" parameterType="map" resultType="int">
	    select count(id) from HZ_Dict_Data ${where}
	</select>
	<select id="get" parameterType="string" resultType="HZ_Dict_Data">
	    select * from HZ_Dict_Data where id = #{id}
	</select>
	<resultMap type="HZ_Dict_Data" id="dict_dataResultMap">
        <result property="id" column="id" />
        <result property="name" column="username" />
        <result property="username" column="password" />
        <result property="password" column="password" />
        <result property="description" column="description" />
    </resultMap>
</mapper>


