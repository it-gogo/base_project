<?xml version="1.0" encoding="UTF-8" ?> 
<!DOCTYPE mapper 
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
<mapper namespace="com.hczd.download.access.mapper.IHZ_Access_Card_HistoryMapper">
    <insert id="insert" parameterType="HZ_Access_Card_History">
	    insert into HZ_Access_Card_History(
			start_time, end_time, remark, card_no, card_id, main_id,
			customer_id, customer_name, vehicle_no, vehicle_id,
	    	user_id,user_name,oper_ip,oper_time,params
	    ) values(
	    	#{start_time},#{end_time},#{remark},#{card_no},#{card_id},#{main_id},
			#{customer_id},#{customer_name},#{vehicle_no},#{vehicle_id},
	    	#{user_id},#{user_name},#{oper_ip},#{oper_time},#{params}
	    )
	    <selectKey keyProperty="id" resultType="int" order="AFTER">
	        select last_value as ID from HZ_Access_Card_History_id_seq
	    </selectKey>
	</insert>
	<update id="update">
	    update HZ_Access_Card_History 
		    set 
			    start_time = #{start_time},end_time = #{end_time},card_no = #{card_no},remark = #{remark},
				card_id = #{card_id},main_id = #{main_id},customer_id = #{customer_id},customer_name = #{customer_name},
				vehicle_no = #{vehicle_no},vehicle_id = #{vehicle_id},
			    user_id = #{user_id}, user_name = #{user_name}, oper_ip = #{oper_ip}, oper_time = #{oper_time}, params = #{params}
		    where id = #{id}
	</update>
	<update id="updateField" parameterType="map">
	     update HZ_Access_Card_History 
		    ${set_sql}
	</update>
	<select id="getScale" parameterType="map" resultType="Object">
	    select ${column} from HZ_Access_Card_History 
	    ${where}
	    limit 1 offset 0
	</select>
	<delete id="delete" parameterType="string">
	    delete from HZ_Access_Card_History where id= #{id}
	</delete>
	<select id="select" resultType="HZ_Access_Card_History">
	    select * from HZ_Access_Card_History
	</select>
	<select id="selectByParams" resultType="HZ_Access_Card_History" parameterType="map">
	    select * from HZ_Access_Card_History ${where} 
	</select>
	<select id="selectByPage" parameterType="HZ_PageData" resultType="HZ_Access_Card_History">
	    select * from HZ_Access_Card_History 
	    limit ${pageSize} offset ${(currentPage - 1) * pageSize}
	</select>
	<select id="selectPageByParams" parameterType="map" resultType="HZ_Access_Card_History">
	    select * from HZ_Access_Card_History ${where} 
	    limit ${pageData.pageSize} offset ${(pageData.currentPage - 1) * pageData.pageSize}
	</select>
	<select id="count" parameterType="map" resultType="int">
	    select count(id) from HZ_Access_Card_History ${where}
	</select>
	<select id="get" parameterType="string" resultType="HZ_Access_Card_History">
	    select * from HZ_Access_Card_History where id = #{id}
	</select>
	<resultMap type="HZ_Access_Card_History" id="main_gas_card_logResultMap">
        <result property="id" column="id" />
        <result property="name" column="username" />
        <result property="username" column="password" />
        <result property="password" column="password" />
        <result property="description" column="description" />
    </resultMap>
</mapper>


